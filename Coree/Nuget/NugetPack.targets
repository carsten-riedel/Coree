<Project>

  <!-- <Import Project="Nuget\NugetPack.targets" /> -->
  
  <Import Project="$(MSBuildThisFileDirectory)NugetPack.props" />

  <Target Name="NugetPackSecrets" AfterTargets="PreBuildEvent">
    <Message Text="NugetPackSecrets" Importance="high" />
    <PropertyGroup>
      <GitIgnoreDef>
Nuget.dir
Nuget.key
*.nupkg
      </GitIgnoreDef>
    </PropertyGroup>
    <WriteLinesToFile File="$(MSBuildThisFileDirectory).gitignore" Lines="$(GitIgnoreDef)" Overwrite="True"  Condition="!Exists('$(MSBuildThisFileDirectory).gitignore')"/>
    <WriteLinesToFile File="$(MSBuildThisFileDirectory)Nuget.key" Lines="" Overwrite="True"  Condition="!Exists('$(MSBuildThisFileDirectory)Nuget.key')"/>
    <WriteLinesToFile File="$(MSBuildThisFileDirectory)Nuget.dir" Lines="$(MSBuildThisFileDirectory.Trim('\'))" Overwrite="True"  Condition="!Exists('$(MSBuildThisFileDirectory)Nuget.dir')"/>
    <WriteLinesToFile File="$(MSBuildThisFileDirectory)README.md" Lines="" Overwrite="True"  Condition="!Exists('$(MSBuildThisFileDirectory)README.md')"/>
    <WriteLinesToFile File="$(MSBuildThisFileDirectory)ReleaseNotes.txt" Lines="" Overwrite="True"  Condition="!Exists('$(MSBuildThisFileDirectory)ReleaseNotes.txt')"/>
    <PropertyGroup>
      <NugetKeyFromFile>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)Nuget.key"))</NugetKeyFromFile>
      <NuGetDirFromFile>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)Nuget.dir"))</NuGetDirFromFile>
      <NugetKey>$(NugetKeyFromFile.Trim())</NugetKey>
      <NuGetDir>$(NuGetDirFromFile.Trim())</NuGetDir>
    </PropertyGroup>
    <Message Text="NugetKey: $(NugetKey)" Importance="high" />
    <Message Text="NuGetDir: $(NuGetDir)" Importance="high" />
  </Target>

  <Target Name="NugetPackDebug" AfterTargets="PostBuildEvent" Condition="'$(NuGetDir)'!='' AND '$(Configuration)'=='Debug'">
    <Exec Command="dotnet pack --no-build -p:PackageVersion=$(VersionPrefix)$(VersionSuffix) --configuration $(Configuration) --output &quot;$(NuGetDir)&quot;" />
  </Target>

  <Target Name="NugetPackRelease" AfterTargets="PostBuildEvent" Condition="'$(NuGetDir)'!='' AND '$(Configuration)'=='Release'">
    <Exec Command="dotnet pack --no-build -p:PackageVersion=$(VersionPrefix)$(VersionSuffix) --configuration $(Configuration) --output &quot;$(NuGetDir)&quot;" />
  </Target>

  <Target Name="NugetPackPushDebug" AfterTargets="PostBuildEvent" Condition="'$(NuGetDir)'!='' AND '$(NugetKey)'!='' AND '$(Configuration)'=='Debug'">
    <Message Text="NugetPackPush $(VersionPrefix)" Importance="high" />
    <Exec Command="dotnet nuget push &quot;$(NuGetDir)\$(ProjectName).$(VersionPrefix)$(VersionSuffix).nupkg&quot; -k $(NugetKey) -s https://api.nuget.org/v3/index.json" />
  </Target>

  <Target Name="NugetPackPushRelease" AfterTargets="PostBuildEvent" Condition="'$(NuGetDir)'!='' AND '$(NugetKey)'!='' AND '$(Configuration)'=='Release'">
    <Message Text="NugetPackPush $(VersionPrefix)" Importance="high" />
    <Exec Command="dotnet nuget push &quot;$(NuGetDir)\$(ProjectName).$(VersionPrefix)$(VersionSuffix).nupkg&quot; -k $(NugetKey) -s https://api.nuget.org/v3/index.json" />
  </Target>

  <ItemGroup>
    <None Update="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" />
  </ItemGroup>
  
</Project>